{
  "version": 3,
  "sources": ["mod.ts"],
  "sourcesContent": ["type Listener = (offset: number) => void\n\ninterface ImageOffsetterParams {\n  containerAnchor: HTMLDivElement\n  imageAnchor: HTMLDivElement\n  image: HTMLImageElement\n  pull?: 'left' | 'right'\n  on?: {\n    offsetChange: Listener\n  }\n  maxWindowWidth?: number\n}\n\nexport class ImageOffsetter {\n  maxWindowWidth = 1728 //px\n\n  containerAnchor: HTMLDivElement\n  imageAnchor: HTMLDivElement\n  image: HTMLImageElement\n\n  imageWidthOrigin: number = 0\n  containerWidth: number = 0\n  offset: number = 0\n  pull: 'right' | 'left'\n  listeners: Listener[] = []\n\n  constructor({\n    containerAnchor,\n    imageAnchor,\n    image,\n    pull = 'right',\n    maxWindowWidth,\n    on,\n  }: ImageOffsetterParams) {\n    this.containerAnchor = containerAnchor\n    this.imageAnchor = imageAnchor\n    this.image = image\n    this.pull = pull\n    if (maxWindowWidth) this.maxWindowWidth = maxWindowWidth\n\n    if (on) {\n      if (on.offsetChange) {\n        this.listeners.push(on.offsetChange)\n      }\n    }\n\n    this.handleResize()\n    globalThis.addEventListener('resize', () => this.handleResize())\n  }\n\n  handleResize() {\n    this.imageWidthOrigin = this.imageAnchor.clientWidth\n    this.containerWidth = this.containerAnchor.clientWidth\n    this.offset = (min(this.maxWindowWidth, globalThis.innerWidth) - this.containerWidth) / 2\n\n    for (let index = 0; index < this.listeners.length; index++) {\n      const fn = this.listeners[index];\n      fn(this.offset)\n    }\n\n    this.image.style.minWidth = `${this.imageWidthOrigin + this.offset}px`;\n\n    if (this.pull === 'right') {\n      this.image.style.marginRight = `${this.offset * -1}px`\n    }\n\n    else if (this.pull === 'left') {\n      this.image.style.marginLeft = `${this.offset * -1}px`\n    }\n  }\n}\n\n/* Helpers */\nfunction min(a: number, b: number) {\n  return a < b ? a : b\n}\n"],
  "mappings": "AAaO,IAAMA,EAAN,KAAqB,CAC1B,eAAiB,KAEjB,gBACA,YACA,MAEA,iBAA2B,EAC3B,eAAyB,EACzB,OAAiB,EACjB,KACA,UAAwB,CAAC,EAEzB,YAAY,CACV,gBAAAC,EACA,YAAAC,EACA,MAAAC,EACA,KAAAC,EAAO,QACP,eAAAC,EACA,GAAAC,CACF,EAAyB,CACvB,KAAK,gBAAkBL,EACvB,KAAK,YAAcC,EACnB,KAAK,MAAQC,EACb,KAAK,KAAOC,EACRC,IAAgB,KAAK,eAAiBA,GAEtCC,GACEA,EAAG,cACL,KAAK,UAAU,KAAKA,EAAG,YAAY,EAIvC,KAAK,aAAa,EAClB,WAAW,iBAAiB,SAAU,IAAM,KAAK,aAAa,CAAC,CACjE,CAEA,cAAe,CACb,KAAK,iBAAmB,KAAK,YAAY,YACzC,KAAK,eAAiB,KAAK,gBAAgB,YAC3C,KAAK,QAAUC,EAAI,KAAK,eAAgB,WAAW,UAAU,EAAI,KAAK,gBAAkB,EAExF,QAASC,EAAQ,EAAGA,EAAQ,KAAK,UAAU,OAAQA,IAAS,CAC1D,IAAMC,EAAK,KAAK,UAAUD,CAAK,EAC/BC,EAAG,KAAK,MAAM,CAChB,CAEA,KAAK,MAAM,MAAM,SAAW,GAAG,KAAK,iBAAmB,KAAK,MAAM,KAE9D,KAAK,OAAS,QAChB,KAAK,MAAM,MAAM,YAAc,GAAG,KAAK,OAAS,EAAE,KAG3C,KAAK,OAAS,SACrB,KAAK,MAAM,MAAM,WAAa,GAAG,KAAK,OAAS,EAAE,KAErD,CACF,EAGA,SAASF,EAAIG,EAAWC,EAAW,CACjC,OAAOD,EAAIC,EAAID,EAAIC,CACrB",
  "names": ["ImageOffsetter", "containerAnchor", "imageAnchor", "image", "pull", "maxWindowWidth", "on", "min", "index", "fn", "a", "b"]
}
